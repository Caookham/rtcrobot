<launch>
    <!--Argument-->

    <!-- Localization-->
    <arg name="map_file" value="$(find rtcrobot)/map/my_map.yaml"/>
    <node name="providemap" pkg="map_server" type="map_server" args="$(arg map_file)"/>

    <include file="$(find rtcrobot)/launch/amcl.launch"/>
    <include file="$(find rtcrobot)/launch/sick_scan.launch"/>
    <!--<include file="$(find rtcrobot)/launch/rs_camera.launch"/> -->

    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <!-- See all params at http://wiki.ros.org/pointcloud_to_laserscan -->
        
        <!-- Min and max height to sample from depth data - these values worked for my drone -->
        <param name="min_height" value="0.0"/>
        <param name="max_height" value="1.0"/>
        
        <!-- Min and max range range of generated laser scan - set this to match your depth sensor -->
        <param name="range_min" value="0.4"/>
        <param name="range_max" value="3.0"/>
        
        <!-- Frame of your depth sensor -->
        <param name="target_frame" value="depth_link"/>

        <!-- Topic from which to read PointCloud2 -->
        <remap from="cloud_in" to="depth/color/points"/>
        
        <!-- Topic to which LaserScan will be published -->
        <remap from="scan" to="/scanbypoint"/>
    </node>
        

    <node pkg="move_base" type="move_base" respawn="false" name="move_base">
        <rosparam file="$(find rtcrobot)/config/costmap_common_params.yaml"     command="load" ns="global_costmap" /> 
        <rosparam file="$(find rtcrobot)/config/costmap_common_params.yaml"     command="load" ns="local_costmap" />
        <rosparam file="$(find rtcrobot)/config/local_costmap_params.yaml"      command="load" />
        <rosparam file="$(find rtcrobot)/config/global_costmap_params.yaml"     command="load" /> 
        <rosparam file="$(find rtcrobot)/config/base_local_planner_params.yaml" command="load" />
        <rosparam file="$(find rtcrobot)/config/move_base_params.yaml"          command="load" />

        <!--<param name="base_global_planner" type="string" value="navfn/NavfnROS" />-->
        <!--<param name="base_local_planner"                value="base_local_planner/TrajectoryPlannerROS"/> -->
	<!--<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />-->
        </node>
</launch>
